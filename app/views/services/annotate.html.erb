<ul>
  <% @points.each do |p| %>
    <% if !(p.quoteDoc) %>
      <li>
          <%= link_to(p.id, point_path(p), title: "View point details: " + p.title) %>
          <%= p.title %>
          <input type="submit" value="Quote" onclick="makeQuote(<%= p.id %>)" >
      </li>
    <% end %>
  <% end %>
</ul>

<form method="POST" id="quoteForm">
  <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
  <input type="hidden" name="quoteDoc" id="quoteDoc">
  <input type="hidden" name="quoteRev" id="quoteRev">
  <input type="hidden" name="quoteStart" id="quoteStart">
  <input type="hidden" name="quoteEnd" id="quoteEnd">
  <input type="hidden" name="quotePointId" id="quotePointId">
  <input type="submit" value="Save">
</form>

<div id="ta"></div>

<script>
  function makeQuote(pointId) {
    var sel = window.getSelection()
    var spanOffset = parseInt(sel.anchorNode.parentElement.getAttribute('offset'), 10);
    var selectionStart = Math.min(sel.anchorOffset, sel.focusOffset);
    var selectionEnd = Math.max(sel.anchorOffset, sel.focusOffset);
    console.log('makeQuote', pointId,
      spanOffset,
      spanOffset + selectionStart,
      spanOffset + selectionEnd
    )
    quoteDoc.value =  sel.anchorNode.parentElement.getAttribute('doc')
    quoteRev.value =  sel.anchorNode.parentElement.getAttribute('rev')
    quoteStart.value = spanOffset + selectionStart
    quoteEnd.value = spanOffset + selectionEnd
    quotePointId.value = pointId
  }
  var quotes = {}
  function fetchDoc(serviceName, doc, rev) {
    console.log('fetchDoc', serviceName, doc, rev)

    var xhr = new XMLHttpRequest()
    xhr.open('GET', 'https://raw.githubusercontent.com/tosdr/tosback2/'
      + rev + '/crawl_reviewed/'
      + encodeURIComponent(serviceName) + '/'
      + doc, true)
    xhr.onload = function() {
      var text = xhr.response
      var cursor = 0
      var span
      if (!quotes[doc]) {
        quotes[doc] = {}
      }
      if (!quotes[doc][rev]) {
        quotes[doc][rev] = []
      }
      quotes[doc][rev].sort((a, b) => a.start - b.start)
      var div = document.createElement('div')
      var h = document.createElement('h2')
      h.innerHTML = doc
      div.appendChild(h)
      for (var i=0; i<quotes[doc][rev].length; i++) {
        var span = document.createElement('span')
        span.textContent = text.substring(cursor, quotes[doc][rev][i].start)
        console.log('green', text.length, cursor, quotes[doc][rev][i].start)
        span.style.color = 'green'
        span.setAttribute('offset', cursor)
        span.setAttribute('doc', doc)
        span.setAttribute('rev', rev)
        div.appendChild(span)
        span = document.createElement('a')
        span.textContent = text.substring(quotes[doc][rev][i].start, quotes[doc][rev][i].end)
        console.log('red', text.length, quotes[doc][rev][i].start, quotes[doc][rev][i].end)
        span.style.color = 'red'
        span.setAttribute('offset', quotes[doc][rev][i].start)
        span.setAttribute('doc', doc)
        span.setAttribute('rev', rev)
        span.href = '/points/' + quotes[doc][rev][i].pointId + '/edit'
        div.appendChild(span)
        cursor = quotes[doc][rev][i].end
      }
      span = document.createElement('span')
      span.textContent = text.substring(cursor)
      console.log('green', text.length, cursor)
      span.style.color = 'green'
      span.setAttribute('offset', cursor)
      span.setAttribute('doc', doc)
      span.setAttribute('rev', rev)
      div.appendChild(span)
      document.getElementById('ta').appendChild(div)
    }
    xhr.send()
  }
  
  function registerQuote(doc, rev, start, end, pointId) {
    if (doc) {
      console.log(doc, rev, start, end, pointId)
      if (!quotes[doc]) {
        quotes[doc] = {}
      }
      if (!quotes[doc][rev]) {
        quotes[doc][rev] = []
        fetchDoc('<%= @service.url %>', doc, rev) // FIXME: check for code injection
      }
      quotes[doc][rev].push({ start, end, pointId})
    }
  }

  // find docs for which no points have quotes yet:
  function fetchJson(url, cb) {
    var xhr = new XMLHttpRequest()
    xhr.open('GET', url, true)
    xhr.onload = function() {
      try {
        cb(JSON.parse(xhr.response))
      } catch (e) {
        console.error(e)
      }
    }
    xhr.send()
  }

  function fetchDocList(serviceUrl) {
    fetchJson('https://api.github.com/repos/tosdr/tosback2/contents/crawl_reviewed/' + encodeURIComponent(serviceUrl), obj => {
      console.log('got docs', serviceUrl, obj)
      obj.map(i => fetchRevList(serviceUrl, i.name))
    })
  }

  function fetchRevList(serviceUrl, docName) {
    fetchJson('https://api.github.com/repos/tosdr/tosback2/commits?path=crawl_reviewed/'
        + encodeURIComponent(serviceUrl) + '/'
        + encodeURIComponent(docName), obj => {
      var topRev = obj[0].sha
      console.log('got rev list', docName, obj, topRev)
      fetchDoc('<%= @service.url %>', docName, topRev) // FIXME: check for code injection
      })
  }

  // ...
  <% @points.each do |p| %>
      registerQuote(
        '<%= p.quoteDoc %>', // FIXME: check for code injection
        '<%= p.quoteRev %>', // FIXME: check for code injection
        parseInt(<%= p.quoteStart %>), // FIXME: check for code injection
        parseInt(<%= p.quoteEnd %>), // FIXME: check for code injection
        parseInt(<%= p.id %>)) // FIXME: check for code injection
  <% end %>
  fetchDocList('<%= @service.url %>')
</script>

